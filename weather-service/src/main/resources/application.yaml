server:
  port: 8082

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  jpa:
    hibernate:
      ddl-auto: none
  json:
    trusted:
      packages: com.example.weatherservice.dto.WeatherDataDto

app:
  rabbitmq:
    weather-queue: weatherRequestQueue
    dlx: weather-exchange.dlx
    weather-key: weather-routing-key

weather-api:
  api-key: ${WEATHER_API_KEY}
  host: ${WEATHER_API_HOST}
  endpoint: ${WEATHER_API_ENDPOINT}

---
spring:
  config:
    activate:
      on-profile: dev
    import: "optional:classpath:.properties"

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/weather_service_db
    username: postgres
    password: pass
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

---
spring:
  config:
    activate:
      on-profile: prod
    import: "optional:classpath:.properties"

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres_weather_service:5433/weather_service_db
    username: postgres
    password: pass
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
