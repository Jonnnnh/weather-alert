server:
  port: 8080
  error:
    include-message: always

spring:
  profiles:
    active: dev
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  datasource:
    url: jdbc:postgresql://localhost:5432/user_service_db
    username: postgres
    password: pass
    driver-class-name: org.postgresql.Driver

  config:
    import: "optional:classpath:.properties"

app:
  application-name: botService
  rabbitmq:
    weather-queue: weatherRequestQueue
    user-queue: userUpdateQueue
    dlx: weather-exchange.dlx
    weather-key: weather-routing-key
    user-key: user-routing-key
  telegram:
    bot-name: Weather Bot
    token: ${TOKEN}

logging:
  level:
    com.example.bot.configuration.MessageConverterConfig: DEBUG
    com.example.bot.configuration.GrpcUserServiceClientConfiguration: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot: INFO

debug: true

---
spring:
  config:
    activate:
      on-profile: dev
    import: "optional:classpath:.properties"

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  datasource:
    url: jdbc:postgresql://localhost:5432/user_service_db
    username: postgres
    password: pass
    driver-class-name: org.postgresql.Driver

grpc:
  client:
    userService:
      address: localhost:9090
      negotiationType: plaintext

app:
  rabbitmq:
    weather-queue: weatherRequestQueue
    user-queue: userUpdateQueue
    dlx: weather-exchange.dlx
    weather-key: weather-routing-key
    user-key: user-routing-key

logging:
  level:
    com.example.bot.configuration.MessageConverterConfig: DEBUG
    com.example.bot.configuration.GrpcUserServiceClientConfiguration: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot: INFO

debug: true

---
spring:
  config:
    activate:
      on-profile: prod
    import: "optional:classpath:.properties"

  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest

  datasource:
    url: jdbc:postgresql://postgres_user_service:5432/user_service_db
    username: postgres
    password: pass
    driver-class-name: org.postgresql.Driver

grpc:
  client:
    userService:
      address: userservice:9090
      negotiationType: plaintext

app:
  rabbitmq:
    weather-queue: weatherRequestQueue
    user-queue: userUpdateQueue
    dlx: weather-exchange.dlx
    weather-key: weather-routing-key
    user-key: user-routing-key

logging:
  level:
    com.example.bot.configuration.MessageConverterConfig: DEBUG
    com.example.bot.configuration.GrpcUserServiceClientConfiguration: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot: INFO

debug: true
