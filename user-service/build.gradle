plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'io.freefair.lombok' version '8.11'
    id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'io.grpc:grpc-netty-shaded:1.65.1'
    implementation 'io.grpc:grpc-protobuf:1.65.1'
    implementation 'io.grpc:grpc-api:1.65.1'
    implementation 'io.grpc:grpc-stub:1.65.1'
    implementation 'net.devh:grpc-server-spring-boot-starter:2.15.0.RELEASE'

    implementation project('grpc')

    implementation 'jakarta.validation:jakarta.validation-api:3.1.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.postgresql:postgresql'
    
    implementation 'org.liquibase:liquibase-core'

    testImplementation platform("org.testcontainers:testcontainers-bom:1.18.3")
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:rabbitmq'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.12"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.54.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main').configureEach {
            plugins {
                grpc {}
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
